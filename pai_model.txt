G4ElectronIonPair.hh

00146 inline 
00147 G4int G4ElectronIonPair::SampleNumberOfIonsAlongStep(const G4Step* step)
00148 {
00149   // use gamma distribution with mean value n=meanion and 
00150   // dispersion D=meanion/invFanoFactor
00151   G4double meanion = MeanNumberOfIonsAlongStep(step);
00152   return G4lrint(CLHEP::RandGamma::shoot(meanion*invFanoFactor,invFanoFactor));
00153 } 
00154 

â€”
 G4double G4ElectronIonPair::MeanNumberOfIonsAlongStep(
00076                                    const G4ParticleDefinition* part, 
00077                                    const G4Material* material,
00078                                    G4double edep,
00079                                    G4double niel)
00080 {
00081   G4double nion = 0.0;
00082 
00083   // NIEL does not provide ionisation clusters
00084   if(edep > niel) {
00085 
00086     // neutral particles do not produce ionisation along step
00087     if(part->GetPDGCharge() != 0.0) {
00088 
00089       // select material
00090       if(material != curMaterial) {
00091         curMaterial = material;
00092         curMeanEnergy = material->GetIonisation()->GetMeanEnergyPerIonPair();
00093 
00094         // if mean energy is not defined then look into G4 DB
00095         if(0.0 == curMeanEnergy) {
00096           curMeanEnergy = FindG4MeanEnergyPerIonPair(material);
00097         } 
00098       }
00099       if(curMeanEnergy > 0.0) { nion = (edep - niel)/curMeanEnergy; }
00100     }
00101   }
00102   return nion;
00103 }